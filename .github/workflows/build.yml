name: building xiaomi 4c firmware

on:
  workflow_dispatch:
  release:
    types: [published]
    
jobs:
  download-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download files and build (enable USB + add kmods)
      run: |
        sudo apt update
        sudo apt install -y tar build-essential file libncurses-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 python3-full python3-venv squashfs-tools binwalk
        mkdir -p downloads
        cd downloads
        # используем snapshot Image Builder (как в оригинале). Можно заменить на релизную версию при желании.
        wget -c https://downloads.openwrt.org/snapshots/targets/ramips/mt76x8/openwrt-imagebuilder-ramips-mt76x8.Linux-x86_64.tar.zst
        tar --zstd -xf openwrt-imagebuilder-*.tar.zst
        cd openwrt-imagebuilder-*/
        # безопасно включаем USB-узел только внутри блока usb@ (не трогаем все disabled)
        sed -n '1,240p' target/linux/ramips/dts/mt7628an_xiaomi_mi-router-4c.dts >/tmp/dts_head || true
        # меняем статус только в блоке usb@ ... };
        perl -0777 -pe 's/(usb@[^{]*\{.*?status\s*=\s*")[^"]*(".*?\})/ $1 . "okay" . $2 /seg' -i target/linux/ramips/dts/mt7628an_xiaomi_mi-router-4c.dts || true
        # или, если perl выражение не отработало, применим более целенаправленную замену внутри блока usb@
        sed -i '/usb@/,/};/ s/status = "disabled"/status = "okay"/' target/linux/ramips/dts/mt7628an_xiaomi_mi-router-4c.dts || true

        # --- Минимальный тестовый набор пакетов (быстро) ---
        # Сначала пробная сборка с минимальными USB-пакетами:
        make image PROFILE="xiaomi_mi-router-4c" PACKAGES="kmod-usb-core kmod-usb2 kmod-ehci-hcd kmod-ohci kmod-uhci-hcd kmod-usb-storage kmod-scsi-core kmod-fs-ext4 block-mount usbutils" -j$(nproc)

        # Если хотите полный набор (раскомментируйте и используйте вместо строки выше):
        # make image PROFILE="xiaomi_mi-router-4c" PACKAGES="apk-mbedtls base-files ca-bundle dnsmasq dropbear firewall4 fstools kmod-gpio-button-hotplug kmod-leds-gpio kmod-mt7603 kmod-nft-offload libc libgcc libustream-mbedtls logd mtd netifd nftables odhcp6c odhcpd-ipv6only opkg ppp ppp-mod-pppoe swconfig uci uclient-fetch urandom-seed urngd wpad-basic-mbedtls uboot-envtools luci kmod-mt76 kmod-mtd-rw iw-full ethtool-full ip-full UDPspeeder zram-swap nano netdiscover kmod-usb-core kmod-usb2 kmod-ehci-hcd kmod-ohci kmod-uhci-hcd kmod-usb-storage kmod-scsi-core kmod-fs-ext4 block-mount usbutils" -j$(nproc)

    - name: Determine release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          TAG_NAME="${{ github.event.release.tag_name }}"
        else
          TAG_NAME="openwrt-SNAPSHOT-10-11-25-xiaomi-4c"
        fi
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Delete existing release assets
      uses: actions/github-script@v7
      with:
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const targetRelease = releases.find(release => release.tag_name === '${{ steps.get_tag.outputs.tag_name }}');
          
          if (targetRelease) {
            console.log(`Found release with tag: ${{ steps.get_tag.outputs.tag_name }}`);
            console.log(`Release ID: ${targetRelease.id}`);
            
            const { data: assets } = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: targetRelease.id
            });
            
            console.log(`Found ${assets.length} assets to delete`);
            
            for (const asset of assets) {
              console.log(`Deleting asset: ${asset.name} (ID: ${asset.id})`);
              await github.rest.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id
              });
            }
            
            console.log('All existing assets deleted');
          } else {
            console.log(`No release found with tag: ${{ steps.get_tag.outputs.tag_name }}`);
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload files to existing release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag_name }}
        files: |
          downloads/openwrt-*/bin/targets/ramips/mt76x8/*.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
