name: building xiaomi 4c firmware

on:
  workflow_dispatch:
  release:
    types: [published]
    
jobs:
  download-and-release:
    runs-on: ubuntu-latest
    env:
      OPENWRT_VERSION: "24.10.4"
      OPENWRT_COMMIT: "29397011cc"
      IMAGEBUILDER_MODE: "false"  # false -> полная сборка из исходников (встраивание опций ядра)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download files and build (full source build, enable USB in kernel)
      run: |
        set -euo pipefail
        sudo apt update
        sudo apt install -y tar build-essential file libncurses-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 python3-full python3-venv squashfs-tools binwalk subversion

        mkdir -p downloads
        cd downloads

        # Clone OpenWrt sources for the 24.10 branch and checkout exact commit
        git clone https://github.com/openwrt/openwrt.git openwrt-src --depth 1 --branch openwrt-24.10
        cd openwrt-src

        # Ensure exact commit (r28959 -> commit suffix 29397011cc)
        # Attempt shallow fetch; if it fails, fetch full object
        if ! git fetch --depth=1 origin ${{ env.OPENWRT_COMMIT }}; then
          git fetch origin ${{ env.OPENWRT_COMMIT }}
        fi
        git reset --hard ${{ env.OPENWRT_COMMIT }}

        # Update and install feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a

        # Enable USB support in kernel config for ramips (idempotent append)
        for KCFG in target/linux/ramips/config-*; do
          if [ -f "$KCFG" ]; then
            grep -q "CONFIG_USB=y" "$KCFG" || cat >> "$KCFG" <<'EOF'
# USB support forced by CI for Xiaomi Mi Router 4C
CONFIG_USB=y
CONFIG_USB_SUPPORT=y
# Set to 'y' to builtin, 'm' to module — adjust if you need builtin
CONFIG_USB_XHCI_HCD=m
CONFIG_USB_EHCI_HCD=m
CONFIG_USB_OHCI_HCD=m
CONFIG_USB_UHCI_HCD=m
CONFIG_USB_STORAGE=m
CONFIG_SCSI=y
CONFIG_BLK_DEV_SD=y
EOF
          fi
        done

        # Ensure DTS enables USB node
        sed -i '/usb@/,/};/ s/status = "disabled"/status = "okay"/' target/linux/ramips/dts/mt7628an_xiaomi_mi-router-4c.dts || true

        # Prepare default config and build
        make defconfig
        # For non-interactive CI build:
        make -j$(nproc) V=s

    - name: Determine release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          TAG_NAME="${{ github.event.release.tag_name }}"
        else
          TAG_NAME="openwrt-${{ env.OPENWRT_VERSION }}-xiaomi-4c"
        fi
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Delete existing release assets
      uses: actions/github-script@v7
      with:
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const targetRelease = releases.find(release => release.tag_name === '${{ steps.get_tag.outputs.tag_name }}');
          
          if (targetRelease) {
            const { data: assets } = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: targetRelease.id
            });
            for (const asset of assets) {
              await github.rest.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id
              });
            }
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload files to existing release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag_name }}
        files: |
          downloads/openwrt-src/bin/targets/ramips/mt76x8/*.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
